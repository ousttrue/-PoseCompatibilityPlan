# vrm1

`glTF` の `node` に含まれる回転がボーン座標系を表すことにして、
`vrm0` の `node` が回転を含まないという制限を緩和する。

ただし、`node` は以下の新しい制約を満たさなければならない。

* tail を示すノードが必用
* node の主軸を tail と直交する軸から選択する

Humanoid ボーンに関しては主軸の指定により、人体内での位置づけが分かるので、
モデルエクスポート時の `T-Pose` は不要となる。
`vrm0` では `T-Pose` からヒューマノイドボーンの座標系を決めていたが、
`vrm1` ではボーンの座標系から `T-Pose` を作ることができる。

# Bone座標系

以下の３軸を定義する。

* 主軸
* 副軸
* ロール軸

XYZ軸の具体的な割り当てはしないが、

Blenderでは

* X
* Z
* Y

となる。

humanoid の LeftLowerArm では、

* 主軸(肘の曲がる軸)
* 副軸(未使用)
* ロール軸(肘のロールする軸)

というように意味を固定する。

```{note}
左右の対称性の問題もここで記述する予定。
+の回転方向
```

T-Pose を基準ポーズとした、
右手系の ZXY Euler 角によるポーズを共有できるようにする。

```{note}
スキニングとリギングを切り離す。
glTFに格納され inverseMatrices は用いない。
import 時に 用途に応じたヒエラルキーを生成しそれにあわせて生成する。
(vrm0互換、nodeに格納されている回転、tail-axisから求められるもの)
```

```{warning}
warningの例です
```

右手系座標系 Y

これにより各ボーンの

```{blockdiag}

blockdiag {
   A -> B -> C;
   A -> E -> F;
}
```

